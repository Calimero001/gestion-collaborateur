// <auto-generated />
using System;
using Colaborateur.Date;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Colaborateur.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230603163246_ccc")]
    partial class ccc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Colaborateur.Models.Collaborateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEntree_SQLI")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("Maricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N_Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collaborateurs");
                });

            modelBuilder.Entity("Colaborateur.Models.Objectif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Delai")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Note")
                        .HasColumnType("float");

                    b.Property<int>("ObjectifGlobaleId")
                        .HasColumnType("int");

                    b.Property<int>("Poit_NoteGlobale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectifGlobaleId");

                    b.ToTable("Objectifs");
                });

            modelBuilder.Entity("Colaborateur.Models.ObjectifGlobale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollaborateurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDubut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NoteGlobale")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CollaborateurId");

                    b.ToTable("ObjectifsGlobaux");
                });

            modelBuilder.Entity("Colaborateur.Models.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("N_Collaborateur")
                        .HasColumnType("int");

                    b.Property<string>("NomProjet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("Colaborateur.Models.ProjetCollaborateur", b =>
                {
                    b.Property<int>("ProjetId")
                        .HasColumnType("int");

                    b.Property<int>("CollaborateurId")
                        .HasColumnType("int");

                    b.HasKey("ProjetId", "CollaborateurId");

                    b.HasIndex("CollaborateurId");

                    b.ToTable("ProjetsCollaborateurs");
                });

            modelBuilder.Entity("Colaborateur.Models.Objectif", b =>
                {
                    b.HasOne("Colaborateur.Models.ObjectifGlobale", "ObjectifGlobale")
                        .WithMany("Objectifs")
                        .HasForeignKey("ObjectifGlobaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjectifGlobale");
                });

            modelBuilder.Entity("Colaborateur.Models.ObjectifGlobale", b =>
                {
                    b.HasOne("Colaborateur.Models.Collaborateur", "Collaborateur")
                        .WithMany("ObjectifGlobale")
                        .HasForeignKey("CollaborateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborateur");
                });

            modelBuilder.Entity("Colaborateur.Models.ProjetCollaborateur", b =>
                {
                    b.HasOne("Colaborateur.Models.Collaborateur", "Collaborateur")
                        .WithMany("ProjetCollaborateurs")
                        .HasForeignKey("CollaborateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colaborateur.Models.Projet", "Projet")
                        .WithMany("ProjetCollaborateurs")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborateur");

                    b.Navigation("Projet");
                });

            modelBuilder.Entity("Colaborateur.Models.Collaborateur", b =>
                {
                    b.Navigation("ObjectifGlobale");

                    b.Navigation("ProjetCollaborateurs");
                });

            modelBuilder.Entity("Colaborateur.Models.ObjectifGlobale", b =>
                {
                    b.Navigation("Objectifs");
                });

            modelBuilder.Entity("Colaborateur.Models.Projet", b =>
                {
                    b.Navigation("ProjetCollaborateurs");
                });
#pragma warning restore 612, 618
        }
    }
}
